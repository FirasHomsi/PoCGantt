@page
@using PoCGantt.Models
@using Gantt = PoCGantt.Models.Gantt;
@using static PoCGantt.Models.Gantt.GantData

<h2>Gantt</h2>

<div class="widget-container">
    @(Html.DevExtreme().Gantt<Gantt.Task>()
        .ID("gantt")
        .Tasks(t => t
        @*.DataSource(ds => ds.Array().Data(SampleData.GanttTasks).Key("ID"))*@
        @*.DataSource(ds => ds.Array().Data(SampleData.GanttTasksJohnsonResidence).Key("ID"))*@
        .DataSource(ds => ds.Array().Data(SampleData.GanttTasksRequirements).Key("ID"))
        .KeyExpr("ID")
        .TitleExpr("Title")
        .ParentIdExpr("ParentId")
        .StartExpr("Start")
        .EndExpr("End")
        .ProgressExpr("Progress")
        )
        .Dependencies(d => d
        @*.DataSource(ds => ds.Array().Data(SampleData.GanttDependencies).Key("ID"))*@
        @*.DataSource(ds => ds.Array().Data(SampleData.GanttDependenciesJohnsonResidence).Key("ID"))*@
        .DataSource(ds => ds.Array().Data(SampleData.GanttDependenciesRequirements).Key("ID"))
        .KeyExpr("ID")
        .PredecessorIdExpr("PredecessorId")
        .SuccessorIdExpr("SuccessorId")
        .TypeExpr("Type")
        )
        .Resources(r => r
        @*.DataSource(ds => ds.Array().Data(SampleData.GanttResources).Key("ID"))*@
        .DataSource(ds => ds.Array().Data(SampleData.GanttResourcesRequirements).Key("ID"))
        .KeyExpr("ID")
        .TextExpr("Text")
        )
        .ResourceAssignments(ra => ra
        @*.DataSource(ds => ds.Array().Data(SampleData.GanttResourceAssignments).Key("ID"))*@
        .DataSource(ds => ds.Array().Data(SampleData.GanttResourceAssignmentsRequirements).Key("ID"))
        .KeyExpr("ID")
        .TaskIdExpr("TaskId")
        .ResourceIdExpr("ResourceId")
        )
        .Editing(e => e.Enabled(true))
        .Validation(v => v.AutoUpdateParentTasks(true))
        .Toolbar(t =>
        {
            t.Items(i =>
            {
                i.Add().Name(GanttToolbarItem.Undo);
                i.Add().Name(GanttToolbarItem.Redo);
                i.Add().Name(GanttToolbarItem.Separator);
                i.Add().Name(GanttToolbarItem.CollapseAll);
                i.Add().Name(GanttToolbarItem.ExpandAll);
                i.Add().Name(GanttToolbarItem.Separator);
                i.Add().Name(GanttToolbarItem.AddTask);
                i.Add().Name(GanttToolbarItem.DeleteTask);
                i.Add().Name(GanttToolbarItem.Separator);
                i.Add().Name(GanttToolbarItem.ZoomIn);
                i.Add().Name(GanttToolbarItem.ZoomOut);
            });
        })
        .Columns(columns =>
        {
            columns.AddFor(m => m.Title)
            .Caption("Subject")
            .Width(300);
            columns.AddFor(m => m.Start)
            .Caption("Start Date")
            .Width(100);
            columns.AddFor(m => m.End)
            .Caption("End Date")
            .Width(100);
        })
        .ScaleType(GanttScaleType.Weeks)
        .TaskListWidth(500)
        .Width(1700)
        .Height(700)
        )
</div>

@*@(Html.DevExtreme().DataGrid<SampleOrder>()
    .ShowBorders(true)
    .DataSource(d => d.Mvc().Controller("SampleData").LoadAction("Get").Key("OrderID"))
    .Columns(columns => {
        columns.AddFor(m => m.OrderID);
        columns.AddFor(m => m.OrderDate);
        columns.AddFor(m => m.CustomerName);
        columns.AddFor(m => m.ShipCountry);
        columns.AddFor(m => m.ShipCity);
    })
    .Paging(p => p.PageSize(10))
    .FilterRow(f => f.Visible(true))
    .HeaderFilter(f => f.Visible(true))
    .GroupPanel(p => p.Visible(true))
    .Grouping(g => g.AutoExpandAll(false))
    .RemoteOperations(true)
    .Summary(s => s
        .TotalItems(totalItems => {
            totalItems.AddFor(m => m.ShipCity).SummaryType(SummaryType.Count);
        })
        .GroupItems(groupItems => {
            groupItems.Add().SummaryType(SummaryType.Count);
        })
    )
)*@